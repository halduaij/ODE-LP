-- fortress.scar
-- Remade by Cylarne_04, smaller in code length and simplified. 2011
-- Updated by Lord Cylarne, 2022 for Gooseman

import("Player.scar");
import("GroupCallers.scar");
import("Command.scar");
import("Groups.scar");
import("ScarUtil.scar");
import("WXPGroups.scar");

function Fortress_Main()
	
	-- Setup the Fortress list above.
	-- Add the health bonus modifier, making the defenses stronger.
	-- Update: 50% health for walls, 100% health for turrets, 25% cost increase for turrets, turret damage increase by 40%, construction time increase by 10%
	
	local playerCount = World_GetPlayerCount()

	print "Fortress Mods activated!";
	
	import("UA_SCARCore/K_04/FortressDefenses.scar");
	
	for i = 0, playerCount - 1 do
		local player = World_GetPlayerAt(i)
		local race = Player_GetRaceName(player)
		
		for i=1,table.getn(t_fortress_list.Turrets) do
			local modifier_health = Modifier_Create(MAT_EntityType, "health_maximum_modifier", MUT_Multiplication, false, 2.0, t_fortress_list.Turrets[i])
			local modifier_req = Modifier_Create(MAT_EntityType, "cost_requisition_modifier", MUT_Multiplication, false, 1.5, t_fortress_list.Turrets[i])
			local modifier_power = Modifier_Create(MAT_EntityType, "cost_power_modifier", MUT_Multiplication, false, 1.5, t_fortress_list.Turrets[i])
			local modifier_time = Modifier_Create(MAT_EntityType, "cost_time_modifier", MUT_Multiplication, false, 1.1, t_fortress_list.Turrets[i])
			
			
			Modifier_ApplyToPlayer(modifier_health, player)
			Modifier_ApplyToPlayer(modifier_req, player)
			Modifier_ApplyToPlayer(modifier_power, player)
			Modifier_ApplyToPlayer(modifier_time, player)
		end 
		for i=1,table.getn(t_fortress_list.Walls) do
			local modifier_health = Modifier_Create(MAT_EntityType, "health_maximum_modifier", MUT_Multiplication, false, 1.5, t_fortress_list.Walls[i])
			local modifier_time = Modifier_Create(MAT_EntityType, "cost_time_modifier", MUT_Multiplication, false, 1.1, t_fortress_list.Walls[i])
			
			
			Modifier_ApplyToPlayer(modifier_health, player)
			Modifier_ApplyToPlayer(modifier_time, player)
		end 
		for i=1,table.getn(t_fortress_list.Turret_Weapons) do
			local modifier_max = Modifier_Create(MAT_WeaponType, "max_damage_weapon_modifier", MUT_Multiplication, false, 1.3, t_fortress_list.Turret_Weapons[i])
			local modifier_min = Modifier_Create(MAT_WeaponType, "min_damage_weapon_modifier", MUT_Multiplication, false, 1.3, t_fortress_list.Turret_Weapons[i])
			
			
			Modifier_ApplyToPlayer(modifier_max, player)
			Modifier_ApplyToPlayer(modifier_min, player)
		end 
	end
end
	

-- Init fortress rule system
function Fortress_Init()
	Rule_AddOneShot(Fortress_Main, 0.8)
end

-- Init SCAR
Scar_AddInit(Fortress_Init)